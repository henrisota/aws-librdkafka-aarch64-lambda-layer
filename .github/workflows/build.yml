name: Build layers
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"
jobs:
  fetch-librdkafka-versions:
    name: Fetch librdfkafka versions
    runs-on: ubuntu-latest
    outputs:
      librdkafka-versions: ${{ steps.fetch-librdkafka-versions.outputs.versions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: confluentinc/librdkafka
          fetch-depth: 0
          fetch-tags: true
          show-progress: true
      - name: Get librdkafka versions
        id: fetch-librdkafka-versions
        run: |
          export VERSIONS="$(git tag --no-column -l 'v2.[0-9]*.[0-9]*' | grep -v RC | tr 'v' ' ' | grep -Eo '2.[0-9]{1,3}.[0-9]{1,3}' | awk '{print "\x22" $1 "\x22"}' | sort -u | tr '\n' ", ")"
          echo "versions=[\"2.3.0\",\"2.4.0\"]" >> "$GITHUB_OUTPUT" # echo "versions=[${VERSIONS::-1}]" >> "$GITHUB_OUTPUT"
  build-base-runtime-images:
    name: Build base runtime images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          use: true
          platforms: linux/arm64
      - name: Cache Docker build
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: runtime-python-${{ matrix.python-version }}-${{ github.sha }}
          restore-keys: |
            runtime-python-${{ matrix.python-version }}
      - name: Build base runtime image
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          file: ./runtime.Dockerfile
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          platforms: linux/arm64
          tags: runtime:${{ matrix.python-version }}
          outputs: type=oci,dest=/tmp/runtime,tar=false
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
      - name: Upload base runtime images
        uses: actions/upload-artifact@v4
        with:
          name: runtime-${{ matrix.python-version }}
          path: /tmp/runtime
          retention-days: 1
      - name: Refresh cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  build-layer:
    name: Build layer
    runs-on: ubuntu-latest
    needs:
      - fetch-librdkafka-versions
      - build-base-runtime-images
    strategy:
      fail-fast: true
      matrix:
        librdkafka-version: ${{ fromJSON(needs.fetch-librdkafka-versions.outputs.librdkafka-versions) }}
        python-version: ["3.8", "3.9"] # ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: runtime-${{ matrix.python-version }}
          path: /tmp/runtime
      - name: Set up Docker Buildx
        id: docker-buildx
        uses: docker/setup-buildx-action@v3
        with:
          use: true
          platforms: linux/arm64
      - name: List and create lock for oci-layout
        run: |
          ls /tmp/runtime
          touch /tmp/runtime/index.lock.json
          ls /tmp/runtime
      - name: Cache Docker build
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: layers-python-${{ matrix.python-version }}-librdkafka-${{ matrix.librdkafka-version }}-${{ github.sha }}
          restore-keys: |
            layers-python-${{ matrix.python-version }}-librdkafka-${{ matrix.librdkafka-version }}
      - name: Build librdkafka
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          file: artifact.Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          platforms: linux/arm64
          outputs: type=local,dest=./build
          target: artifact
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            LIBRDKAFKA_VERSION=${{ matrix.librdkafka-version }}
          build-contexts: |
            runtime=oci-layout:///tmp/runtime:${{ matrix.python-version }}
      - name: Archive layer
        uses: actions/upload-artifact@v4
        with:
          name: python-${{ matrix.python-version }}-librdkafka-${{ matrix.librdkafka-version }}
          path: build
          retention-days: 10
      - name: Refresh cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
